buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'

		appVersion = "1.0."
        buildNumber = (System.getenv("BUILD_NUMBER")?.toString()?.toInteger() ?: 1)
      	appName = 'management.jar'
	}
	repositories {
        maven { url "https://plugins.gradle.org/m2/" }
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5-rc1"
	}
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "org.sonarqube"
apply plugin: 'jacoco'

version appVersion + buildNumber
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

bootJar { archiveName = appName }

task bootJarCustom (type: Copy, dependsOn:bootJar){
    from "build/libs"
    into "./build"
    include (appName)
}
configure(bootJarCustom) {
    group = BasePlugin.BUILD_GROUP
    description = 'Assembles bootJar task and copy wars to build directory of root project'
}

dependencies {
	springBoot { buildInfo() }
    if (System.getenv("AUTH_API_BUILD")?.toBoolean()){
        compile project(":auth-api")
    }
	implementation ('org.springframework.ldap:spring-ldap-core')
	implementation ('org.springframework.boot:spring-boot-starter-web')
	implementation ('org.springframework.boot:spring-boot-starter-jdbc')
	implementation ('org.springframework.security:spring-security-crypto')
	implementation ('org.springframework.boot:spring-boot-starter-actuator')
	implementation ('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation ('org.springframework.data:spring-data-commons:2.1.4.RELEASE')

	implementation ('com.zaxxer:HikariCP')
	implementation ('org.postgresql:postgresql:42.2.5')

	// Swagger 2
	compile ("io.springfox:springfox-swagger2:2.9.2")
	compile ("io.springfox:springfox-swagger-ui:2.9.2")

	testImplementation('org.springframework.boot:spring-boot-starter-test')

	println("AUTH_API_BUILD ${System.getenv("AUTH_API_BUILD")?.toString()}")
}
